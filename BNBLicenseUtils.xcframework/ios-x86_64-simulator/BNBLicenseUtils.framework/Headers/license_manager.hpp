/// \file
/// \addtogroup LicenseUtils
/// @{
///
// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from license_utils.djinni

#pragma once

#include <bnb/utils/defs.hpp>
#include <memory>
#include <string>

namespace bnb { namespace interfaces {

/** This class incapsulates information about Client Token. */
class BNB_EXPORT license_manager {
public:
    virtual ~license_manager() {}

    /** Creates *new* `LicenceManager`. This metod won't change Banuba SDK internal state. */
    static std::shared_ptr<license_manager> create(const std::string & client_token);

    /**
     * Returns the instance used by Banuba SDK to check licence.
     * This istance was created by `UtilityManager.initialize`.
     */
    static std::shared_ptr<license_manager> instance();

    /** Checks if Client Token is expired. */
    virtual bool is_expired() const = 0;

    /** Returns decoded content of Client Token */
    virtual std::string get_json() const = 0;
};

} }  // namespace bnb::interfaces
/// @}

